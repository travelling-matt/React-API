{"version":3,"sources":["AppPunkApi.js","index.js"],"names":["App","useState","beerInfo","setBeerInfo","loading","setLoading","error","message","setError","handler","a","fetch","response","console","log","status","Error","json","data","useEffect","name","tagline","description","src","image_url","alt","abv","food_pairing","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NA0DeA,EAvDH,WAEV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBACxB,CACEK,OAAM,EACNC,QAAS,KAHb,mBAAOD,EAAP,KAAcE,EAAd,KAOMC,EAAO,uCAAG,8BAAAC,EAAA,sEAEVL,GAAW,GAFD,SAGaM,MAAM,2CAHnB,UAGJC,EAHI,OAIVC,QAAQC,IAAI,gBAAiBF,GACN,MAApBA,EAASG,OALF,sBAMA,IAAIC,MAAM,QANV,wBAQSJ,EAASK,OARlB,QAQJC,EARI,OASVL,QAAQC,IAAI,WAAYI,EAAK,IAC7Bf,EAAYe,EAAK,IACjBb,GAAW,GAXD,kDAaVG,EAAS,CAAEF,OAAM,EAAMC,QAASD,EAAMC,UAb5B,0DAAH,qDAqBf,OAJAY,qBAAU,WACNV,MACF,IAECH,EAAMA,MACE,6BAAKA,EAAMC,UAIlB,gCACI,sEACCH,EACG,2CAEA,qCACA,2DAA8BF,EAASkB,QACvC,gDAAmBlB,EAASmB,WAC5B,0DAA6BnB,EAASoB,eACtC,4BAAG,qBAAKC,IAAKrB,EAASsB,UAAWC,IAAKvB,EAASkB,SAC/C,sCAASlB,EAASwB,OAClB,4CAAexB,EAASyB,mBAG5B,wBAAQC,QAASnB,EAAjB,qCCjDRoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d4d7386c.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst App = () => {\n\n  const [beerInfo, setBeerInfo] = useState(\"\")\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\n    {\n      error:false,\n      message: \"\"\n    }\n  )\n\n  const handler = async () => {\n    try {\n        setLoading(true);\n        const response = await fetch(\"https://api.punkapi.com/v2/beers/random\") \n        console.log(\"http response\", response)\n        if(response.status !== 200){\n            throw new Error(\"oops\");\n        }\n        const data = await response.json();\n        console.log(\"API info\", data[0]);\n        setBeerInfo(data[0]);\n        setLoading(false);\n    } catch(err) {\n        setError({ error:true, message: error.message})\n    }\n};\n\nuseEffect(() => {\n    handler();\n},[]);\n\nif(error.error){\n    return <h1>{error.message}</h1>\n}\n  \nreturn (\n    <div>\n        <h1>Please pick me a random Brewdog beer</h1>\n        {loading ? (\n            <p>loading...</p>\n        ) : (\n            <>\n            <p>Say my name, say my name: {beerInfo.name}</p>\n            <p>In a nutshell: {beerInfo.tagline}</p>\n            <p>If you really need more: {beerInfo.description}</p>\n            <p><img src={beerInfo.image_url} alt={beerInfo.name}/></p>\n            <p>ABV: {beerInfo.abv}</p>\n            <p>Pair with: {beerInfo.food_pairing}</p>\n            </>        \n        )}\n        <button onClick={handler}>ugh, get a new beer</button>\n    </div>\n);\n};\nexport default App;\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './AppPunkApi';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}